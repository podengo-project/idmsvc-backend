// Code generated by mockery v2.40.3. DO NOT EDIT.

package middleware

import (
	rbac_data "github.com/podengo-project/idmsvc-backend/internal/infrastructure/middleware/rbac-data"
	mock "github.com/stretchr/testify/mock"
)

// RbacVerbValidator is an autogenerated mock type for the RbacVerbValidator type
type RbacVerbValidator struct {
	mock.Mock
}

// Execute provides a mock function with given fields: v
func (_m *RbacVerbValidator) Execute(v rbac_data.RBACVerb) rbac_data.RBACVerb {
	ret := _m.Called(v)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 rbac_data.RBACVerb
	if rf, ok := ret.Get(0).(func(rbac_data.RBACVerb) rbac_data.RBACVerb); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Get(0).(rbac_data.RBACVerb)
	}

	return r0
}

// NewRbacVerbValidator creates a new instance of RbacVerbValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRbacVerbValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *RbacVerbValidator {
	mock := &RbacVerbValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
