// Code generated by mockery v2.46.0. DO NOT EDIT.

package middleware

import (
	rbac_data "github.com/podengo-project/idmsvc-backend/internal/infrastructure/middleware/rbac-data"
	mock "github.com/stretchr/testify/mock"
)

// RBACMapBuilder is an autogenerated mock type for the RBACMapBuilder type
type RBACMapBuilder struct {
	mock.Mock
}

// Add provides a mock function with given fields: r, m, p
func (_m *RBACMapBuilder) Add(r rbac_data.Route, m rbac_data.Method, p rbac_data.RBACPermission) rbac_data.RBACMapBuilder {
	ret := _m.Called(r, m, p)

	if len(ret) == 0 {
		panic("no return value specified for Add")
	}

	var r0 rbac_data.RBACMapBuilder
	if rf, ok := ret.Get(0).(func(rbac_data.Route, rbac_data.Method, rbac_data.RBACPermission) rbac_data.RBACMapBuilder); ok {
		r0 = rf(r, m, p)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(rbac_data.RBACMapBuilder)
		}
	}

	return r0
}

// Build provides a mock function with given fields:
func (_m *RBACMapBuilder) Build() rbac_data.RBACMap {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Build")
	}

	var r0 rbac_data.RBACMap
	if rf, ok := ret.Get(0).(func() rbac_data.RBACMap); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(rbac_data.RBACMap)
		}
	}

	return r0
}

// NewRBACMapBuilder creates a new instance of RBACMapBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRBACMapBuilder(t interface {
	mock.TestingT
	Cleanup(func())
}) *RBACMapBuilder {
	mock := &RBACMapBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
