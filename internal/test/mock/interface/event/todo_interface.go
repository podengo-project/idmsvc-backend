// Code generated by mockery v2.36.0. DO NOT EDIT.

package event

import (
	kafka "github.com/confluentinc/confluent-kafka-go/kafka"
	mock "github.com/stretchr/testify/mock"
)

// TodoInterface is an autogenerated mock type for the TodoInterface type
type TodoInterface struct {
	mock.Mock
}

// TodoCreated provides a mock function with given fields: msg
func (_m *TodoInterface) TodoCreated(msg *kafka.Message) error {
	ret := _m.Called(msg)

	var r0 error
	if rf, ok := ret.Get(0).(func(*kafka.Message) error); ok {
		r0 = rf(msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTodoInterface creates a new instance of TodoInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTodoInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *TodoInterface {
	mock := &TodoInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
