// Code generated by mockery v2.40.3. DO NOT EDIT.

package interactor

import (
	identity "github.com/redhatinsights/platform-go-middlewares/v2/identity"

	mock "github.com/stretchr/testify/mock"

	public "github.com/podengo-project/idmsvc-backend/internal/api/public"
)

// HostconfJwkInteractor is an autogenerated mock type for the HostconfJwkInteractor type
type HostconfJwkInteractor struct {
	mock.Mock
}

// GetSigningKeys provides a mock function with given fields: rhid, params
func (_m *HostconfJwkInteractor) GetSigningKeys(rhid *identity.XRHID, params *public.GetSigningKeysParams) (string, error) {
	ret := _m.Called(rhid, params)

	if len(ret) == 0 {
		panic("no return value specified for GetSigningKeys")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(*identity.XRHID, *public.GetSigningKeysParams) (string, error)); ok {
		return rf(rhid, params)
	}
	if rf, ok := ret.Get(0).(func(*identity.XRHID, *public.GetSigningKeysParams) string); ok {
		r0 = rf(rhid, params)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(*identity.XRHID, *public.GetSigningKeysParams) error); ok {
		r1 = rf(rhid, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewHostconfJwkInteractor creates a new instance of HostconfJwkInteractor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHostconfJwkInteractor(t interface {
	mock.TestingT
	Cleanup(func())
}) *HostconfJwkInteractor {
	mock := &HostconfJwkInteractor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
