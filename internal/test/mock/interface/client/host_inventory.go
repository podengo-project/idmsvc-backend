// Code generated by mockery v2.36.0. DO NOT EDIT.

package client

import (
	client "github.com/podengo-project/idmsvc-backend/internal/interface/client"
	mock "github.com/stretchr/testify/mock"
)

// HostInventory is an autogenerated mock type for the HostInventory type
type HostInventory struct {
	mock.Mock
}

// GetHostByCN provides a mock function with given fields: iden, requestId, cn
func (_m *HostInventory) GetHostByCN(iden string, requestId string, cn string) (client.InventoryHost, error) {
	ret := _m.Called(iden, requestId, cn)

	var r0 client.InventoryHost
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string, string) (client.InventoryHost, error)); ok {
		return rf(iden, requestId, cn)
	}
	if rf, ok := ret.Get(0).(func(string, string, string) client.InventoryHost); ok {
		r0 = rf(iden, requestId, cn)
	} else {
		r0 = ret.Get(0).(client.InventoryHost)
	}

	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(iden, requestId, cn)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewHostInventory creates a new instance of HostInventory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHostInventory(t interface {
	mock.TestingT
	Cleanup(func())
}) *HostInventory {
	mock := &HostInventory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
