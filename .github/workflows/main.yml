---
name: Validate

on:
  - push
  - pull_request

permissions:
  contents: write

jobs:
  status:
    runs-on: "ubuntu-latest"
    steps:
      - run: "echo github.event_name ${{ github.event_name }}"
      - run: "echo github.head_ref ${{ github.head_ref }}"
      - run: "echo github.actor ${{ github.actor }}"
  dependabot:
    if: "${{ github.event_name == 'pull_request' && startsWith(github.head_ref, 'dependabot/') }}"
    runs-on: "ubuntu-latest"
    container: golang:1.19
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: recursive
          ref: ${{ github.head_ref }}

      - name: "Set git safe directory"
        run: git config --system --add safe.directory $GITHUB_WORKSPACE

      - name: "Regenerate API"
        run: make generate-api

      - name: "Regenerate mocks"
        run: make generate-mock

      - name: "Show diff"
        run: git diff .

      - name: Get last commit message
        id: last-commit-message
        run: |
          echo "msg=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT

      # rewrite Dependabot commit to include auto-generated files
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ steps.last-commit-message.outputs.msg }}
          commit_options: '--amend --no-edit'
          push_options: '--force'
          skip_fetch: true

  validate:
    runs-on: "ubuntu-latest"
    container: golang:1.19
    if: ${{ always() }}
    needs:
      - dependabot
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: recursive

      - name: "Set git safe directory"
        run: git config --system --add safe.directory $GITHUB_WORKSPACE

      - name: Install package dependencies
        run: |
          apt-get update
          apt-get install -y python3-venv python3-pip
          python3 -m venv .venv
          .venv/bin/pip install yamllint

      - name: Install golang tools
        run: make install-go-tools

      - name: Install service dependencies
        run: make get-deps

      - name: Checking missed 'make tidy'
        run: make tidy && git diff --exit-code go.mod go.sum

      - name: Checking missed 'make generate-api'
        run: make generate-api && git diff --exit-code internal/api/public/

      - name: Checking missed 'make generate-mock'
        run: make generate-mock && git diff --exit-code internal/test/mock/

      - name: Checking missed 'go fmt'
        run: make go-fmt && git diff --exit-code .

      - name: Checking yaml files
        run: .venv/bin/python3 -m yamllint .

      - name: Run go vet
        run: go vet $(go list ./... | grep -v /vendor/)

      - name: Run tests
        run: make test

      - name: Process coverage report
        run: |
          go get github.com/boumenot/gocover-cobertura
          go run github.com/boumenot/gocover-cobertura < coverage.out > coverage.xml
          go tool cover -func ./coverage.out

      - name: Upload coverage report
        uses: "actions/upload-artifact@v3"
        with:
          path: coverage.xml

      - name: Build executables
        run: make build
