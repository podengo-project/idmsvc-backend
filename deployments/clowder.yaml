# https://consoledot.pages.redhat.com/clowder/dev/api_reference.html
---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: idmsvc

objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: ${APP_NAME}-backend
    spec:
      envName: ${ENV_NAME}
      testing:
        # TODO Rename to your IQE plugin name
        iqePlugin: idmsvc
      # FIXME Update dependencies when integration with rbac is made
      # dependencies: ["rbac"]
      # https://consoledot.pages.redhat.com/clowder/dev/providers/dependencies.html
      dependencies: ["rbac"]

      # https://consoledot.pages.redhat.com/clowder/dev/providers/deployment.html
      deployments:
        # TODO Rename to your service-name deployment name
        - name: service
          # NOTE minReplicas is deprecated, but not sure if this change exist further
          # than the ephemeral environment. When both values exist, replicas has
          # priority over minReplicas
          # https://github.com/RedHatInsights/clowder/commit/aaf5643a7b1e769b53768e7c1a446d348d0a71f4
          minReplicas: 3  # DEPRECATED
          replicas: 3

          # https://consoledot.pages.redhat.com/clowder/dev/providers/web.html
          webServices:
            public:
              enabled: true
              # TODO Define the service name
              # For /api/idmsvc/v*/* endpoints
              apiPath: ${APP_NAME}
          podSpec:
            initContainers:
              - name: db-migrate
                inheritEnv: true
                args:
                  - /opt/bin/db-tool
                  - migrate
                  - up
                  - "0"
            image: ${IMAGE}:${IMAGE_TAG}
            command:
              - /opt/bin/service
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /private/livez
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 35
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 120
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /private/readyz
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 35
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 120
            env:
              - name: CLOWDER_ENABLED
                value: "true"
              - name: LOGGING_LEVEL
                value: ${{LOGGING_LEVEL}}
              - name: APP_TOKEN_EXPIRATION_SECONDS
                value: "${APP_TOKEN_EXPIRATION_SECONDS}"
              - name: APP_PAGINATION_DEFAULT_LIMIT
                value: ${APP_PAGINATION_DEFAULT_LIMIT}
              - name: APP_PAGINATION_MAX_LIMIT
                value: ${APP_PAGINATION_MAX_LIMIT}
              - name: APP_ACCEPT_X_RH_FAKE_IDENTITY
                value: ${APP_ACCEPT_X_RH_FAKE_IDENTITY}
              - name: APP_VALIDATE_API
                value: ${APP_VALIDATE_API}
              - name: APP_SECRET
                valueFrom:
                  secretKeyRef:
                    key: app_secret
                    name: app-secret
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
              requests:
                cpu: ${CPU_REQUESTS}
                memory: ${MEMORY_REQUESTS}
            volumes:
              - emptyDir: {}
                name: tmpdir
            volumeMounts:
              - mountPath: /tmp
                name: tmpdir

      # https://consoledot.pages.redhat.com/clowder/dev/providers/kafka.html
      # TODO Uncomment when kafka is needed or clean-up
      # kafkaTopics:
      #   - partitions: 3
      #     replicas: 3
      #     topicName: platform.${APP_NAME}.todo-created

      # https://consoledot.pages.redhat.com/clowder/dev/providers/cronjob.html
      jobs:
        # TODO Uncomment and update for your jobs
        # - name: todo-job-name
        #   # https://crontab.guru/
        #   schedule: "0 0/8 * * *"
        #   concurrencyPolicy: "Forbid"
        #   podSpec:
        #     image: ${IMAGE}:${IMAGE_TAG}
        #     inheritEnv: true
        #     command:
        #       - /opt/bin/my-job-binary
        #     env:
        #       - name: LOGGING_LEVEL
        #         value: ${{LOGGING_LEVEL}}

      # https://consoledot.pages.redhat.com/clowder/dev/providers/database.html
      database:
        name: ${APP_NAME}
        version: 15

parameters:
  - name: ENV_NAME
    required: true
  - name: APP_NAME
    value: idmsvc
    description: |
      The internal application name that is used to
      compose the API path for its routes.
  - name: IMAGE
    value: quay.io/cloudservices/idmsvc-backend
  - name: IMAGE_TAG
    required: true
  - name: CPU_LIMIT
    value: 500m
    description: |
      The resource limit for the cpu per pod
  - name: CPU_REQUESTS
    value: 100m
    description: |
      The resource request for the cpu per pod
  - name: MEMORY_LIMIT
    value: 1Gi
    description: |
      The resource limit for the memory per pod
  - name: MEMORY_REQUESTS
    value: 100Mi
    description: |
      The resource request for the memory per pod
  - name: LOGGING_LEVEL
    value: warn
    description: |
      The log level for the deployment; valid values
      are "info", "warn", "error", "debug", "trace".
  - name: APP_TOKEN_EXPIRATION_SECONDS
    value: "7200"
    description: |
      Indicate the token expiration duration expressed in
      seconds. By default set to 7200 seconds (2 hours).
  - name: APP_PAGINATION_DEFAULT_LIMIT
    value: "10"
    description: |
      The pagination default limit default to list domains
  - name: APP_PAGINATION_MAX_LIMIT
    value: "100"
    description: |
      The pagination max limit to list domains
  - name: APP_ACCEPT_X_RH_FAKE_IDENTITY
    value: "false"
    description: |
      It is used only for development to add middleware to
      process the x-rh-fake-identity header.
  - name: APP_VALIDATE_API
    value: "false"
    description: |
      It allows to validate API requests by using the
      service OpenAPI specification.
